https://www.javacodemonk.com/diamond-problem-of-inheritance-in-java-8-88faf6c9#:~:text=Java%208%20brought%20a%20major,while%20making%20this%20big%20change.&text=Any%20method%20inherited%20from%20a,method%20inherited%20from%20an%20interface


1.  Any method inherited from a class or a superclass is given higher priority over any default method inherited from an interface.
2.  Derived interfaces or sub-interfaces take higher precedence than the interfaces higher-up in the inheritance hierarchy.
3.  In case Rule 1 and Rule 2 are not able to resolve the conflict then the implementing class has to specifically override and provide a method with the same method definition.



=========================================================NOTE POINT 2 OF THE GIVEN LINK ================================
package Test;





interface d1
{
    default void hello()
    {
        System.out.println("d1");
    }
}
interface d12 extends d1
{
    default void hello()
    {
        System.out.println("d12");
    }
}
interface d3 extends d12
{

}
interface d4 extends d3
{
    default void hello()
    {
        System.out.println("d4");
    }
}
interface d5 extends d1
{

}
interface d7 extends d5{

}
interface d8 extends d6{

}
interface d6 extends d1
{

}


class TestClass implements d7,d8,d6,d5,d4,d1,d12
{
    public static void main(String args[])
    {
        new TestClass().hello();
    }
}
public class Check {

    public  static void main(String argc[])
    {

    }
}

=====================================================================================================================