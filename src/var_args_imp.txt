
-----------------------------------------------------------------------------
 static void okay(float op1,int ...op)
    {

        System.out.println("One");
    }
    static void okay(int  ...b)
    {
     System.out.println("Two");
    }

    public static void main(String[] args){


  okay(10.90f,20);
  }

  output :-> one


---------------------------------------------------------------------------------------

static void okay(float y,int... op)
    {

        System.out.println("One");
    }
    static void okay(int ...io)
    {
     System.out.println("Two");
    }


    public static void main(String[] args){



  okay(20);
  }
  output -> Two

int is very close to int according to their size as compared to float




------------------------------------------------------------------------------------------------------------
   static void okay(int b,int ...op)
      {

          System.out.println("One");
      }
      static void okay(int  ...b)
      {
       System.out.println("Two");
      }

      public static void main(String[] args){


    okay(10.90f,20);

}

Error

-----------------------------------------------------------------



static void okay(int y,int ... op)
    {

        System.out.println("One");
    }
    static void okay(int io,float ...b)
    {
     System.out.println("Two");
    }

    okay(90); //correct output will contain from the lowest in size (output-> one) bcz int is smaller than float note : this case does not hold with char and short but apply to every primitive type except short and char
    okay(90,9); //one
    okay(90,9,9f) //two





but in case of boolean it is not true bcz size is not clear of boolean


static void okay(int y,boolean ... op)
    {

        System.out.println("One");
    }
    static void okay(int io,float ...b)
    {
     System.out.println("Two");
    }
Okay(90); //ERROR

------------------------------------------------------------------------------------------------------

class HelloWorld {
    static void hello(double ... op){

    }
    static void hello(int ... op){

    }
    public static void main(String[] args) {
        System.out.println("Hello, World!");
       hello(null);
    }
}



hello(null);
       ^
  both method hello(double...) in HelloWorld and method hello(int...) in HelloWorld match
1 error




-----------------------------------------------
 static void okay(int y,int ...op)
    {

        System.out.println("One");
    }
    static void okay(int io,Class_name ...b)
    {
     System.out.println("Two");
    }

    public static void main(String[] args){
  okay(20); // error bcz there is Class_name type that is not primitive so we can not compare int and Class_name
  okay(20,null);   //Two
  okay(89,90);     //One
  }

-------------------------------------------------------------------------------------

 static void okay(int y,char ...op)
    {

        System.out.println("One");
    }
    static void okay(int io,short ...b)
    {
     System.out.println("Two");
    }

    public static void main(String[] args){
  okay(20); //error
  }
------------------------------------------------------------------------------------------------------------

###### no-vargs vs vargs

static void okay(int y,int ...op)
    {

        System.out.println("One");
    }
    static void okay(int io,int bn)
    {
     System.out.println("Two");
    }

    public static void main(String[] args){



  okay(20);   // one
  okay(90,78) //always two
  okay(90,89,89) //always one

  }




  ----------------------------------------------------------------------------------------------------



  static void okay(int y,int op)
      {

          System.out.println("One");
      }
      static void okay(int io,float bn)
      {
       System.out.println("Two");
      }

      public static void main(String[] args){



    okay(20,20);
    }
    it will match to it's proper function
    output ---> one


-------------------------------------------------------------------------------------------------------
 static void okay(int y,double op)
    {

        System.out.println("One");
    }
    static void okay(int io,float bn)
    {
     System.out.println("Two");
    }


    public static void main(String[] args){



  okay(20,20);
  }

  output -> Two because float is very nearest to integer as compared to double

  Reminder -> int < long <float <double


 ----------------------------------------------------------------------------------------------------------







